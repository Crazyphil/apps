/**
 * ownCloud App Framework - v0.0.1
 *
 * Copyright (c) 2013 - Bernhard Posselt <nukeawhale@gmail.com>
 *
 * This file is licensed under the Affero General Public License version 3 or later.
 * See the COPYING-README file
 *
 */

 /* Generated with Coffee-Script */

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {

  angular.module('OC', []).config([
    '$httpProvider', function($httpProvider) {
      $httpProvider.defaults.get['requesttoken'] = oc_requesttoken;
      $httpProvider.defaults.post['requesttoken'] = oc_requesttoken;
      $httpProvider.defaults.put['requesttoken'] = oc_requesttoken;
      $httpProvider.defaults["delete"]['requesttoken'] = oc_requesttoken;
      $httpProvider.defaults.post['Content-Type'] = 'application/x-www-form-urlencoded';
      $httpProvider.defaults.get['Content-Type'] = 'application/x-www-form-urlencoded';
      return $httpProvider.defaults.transformRequest = function(data) {
        if (angular.isUndefined(data)) {
          return {};
        } else {
          return $.param(data);
        }
      };
    }
  ]);

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {

  angular.module('OC').directive('ocClickSlideToggle', [
    '$rootScope', function($rootScope) {
      return function(scope, elm, attr) {
        var options, slideArea;
        options = scope.$eval(attr.ocClickSlideToggle);
        if (angular.isDefined(options) && angular.isDefined(options.selector)) {
          slideArea = $(options.selector);
        } else {
          slideArea = elm;
        }
        elm.click(function() {
          if (slideArea.is(':visible') && !slideArea.is(':animated')) {
            return slideArea.slideUp();
          } else {
            return slideArea.slideDown();
          }
        });
        if (angular.isDefined(options) && angular.isDefined(options.hideOnFocusLost) && options.hideOnFocusLost) {
          $(document.body).click(function() {
            return $rootScope.$broadcast('ocLostFocus');
          });
          $rootScope.$on('ocLostFocus', function(scope, params) {
            if (params !== slideArea) {
              if (slideArea.is(':visible') && !slideArea.is(':animated')) {
                return slideArea.slideUp();
              }
            }
          });
          slideArea.click(function(e) {
            $rootScope.$broadcast('ocLostFocus', slideArea);
            return e.stopPropagation();
          });
          return elm.click(function(e) {
            $rootScope.$broadcast('ocLostFocus', slideArea);
            return e.stopPropagation();
          });
        }
      };
    }
  ]);

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {

  angular.module('OC').directive('ocDraggable', function() {
    return function(scope, elm, attr) {
      var options;
      options = scope.$eval(attr.ocDraggable);
      if (angular.isDefined(options)) {
        return elm.draggable(options);
      } else {
        return elm.draggable();
      }
    };
  });

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {

  angular.module('OC').directive('ocForwardClick', function() {
    return function(scope, elm, attr) {
      var options;
      options = scope.$eval(attr.ocForwardClick);
      if (angular.isDefined(options) && angular.isDefined(options.selector)) {
        return $(elm).click(function() {
          return $(options.selector).trigger('click');
        });
      }
    };
  });

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  angular.module('OC').factory('_BiggerThanEqualFilter', [
    '_ModelFilter', function(_ModelFilter) {
      var BiggerThanEqualFilter;
      BiggerThanEqualFilter = (function(_super) {

        __extends(BiggerThanEqualFilter, _super);

        function BiggerThanEqualFilter(_field, _value) {
          var name;
          this._field = _field;
          this._value = _value;
          name = 'biggerthanequal';
          BiggerThanEqualFilter.__super__.constructor.call(this, name, [this._field, this._value]);
        }

        BiggerThanEqualFilter.prototype.exec = function(data) {
          var entry, filtered, _i, _len;
          filtered = [];
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            entry = data[_i];
            if (entry[this._field] >= this._value) {
              filtered.push(entry);
            }
          }
          return filtered;
        };

        return BiggerThanEqualFilter;

      })(_ModelFilter);
      return BiggerThanEqualFilter;
    }
  ]);

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  angular.module('OC').factory('_BiggerThanFilter', [
    '_ModelFilter', function(_ModelFilter) {
      var BiggerThanFilter;
      BiggerThanFilter = (function(_super) {

        __extends(BiggerThanFilter, _super);

        function BiggerThanFilter(_field, _value) {
          var name;
          this._field = _field;
          this._value = _value;
          name = 'biggerthan';
          BiggerThanFilter.__super__.constructor.call(this, name, [this._field, this._value]);
        }

        BiggerThanFilter.prototype.exec = function(data) {
          var entry, filtered, _i, _len;
          filtered = [];
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            entry = data[_i];
            if (entry[this._field] > this._value) {
              filtered.push(entry);
            }
          }
          return filtered;
        };

        return BiggerThanFilter;

      })(_ModelFilter);
      return BiggerThanFilter;
    }
  ]);

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  angular.module('OC').factory('_EqualFilter', [
    '_ModelFilter', function(_ModelFilter) {
      var EqualFilter;
      EqualFilter = (function(_super) {

        __extends(EqualFilter, _super);

        function EqualFilter(_field, _value) {
          var name;
          this._field = _field;
          this._value = _value;
          name = 'equal';
          EqualFilter.__super__.constructor.call(this, name, [this._field, this._value]);
        }

        EqualFilter.prototype.exec = function(data) {
          var entry, equal, _i, _len;
          equal = [];
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            entry = data[_i];
            if (entry[this._field] === this._value) {
              equal.push(entry);
            }
          }
          return equal;
        };

        return EqualFilter;

      })(_ModelFilter);
      return EqualFilter;
    }
  ]);

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  angular.module('OC').factory('_LessThanEqualFilter', [
    '_ModelFilter', function(_ModelFilter) {
      var LessThanEqualFilter;
      LessThanEqualFilter = (function(_super) {

        __extends(LessThanEqualFilter, _super);

        function LessThanEqualFilter(_field, _value) {
          var name;
          this._field = _field;
          this._value = _value;
          name = 'lessthanequal';
          LessThanEqualFilter.__super__.constructor.call(this, name, [this._field, this._value]);
        }

        LessThanEqualFilter.prototype.exec = function(data) {
          var entry, filtered, _i, _len;
          filtered = [];
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            entry = data[_i];
            if (entry[this._field] <= this._value) {
              filtered.push(entry);
            }
          }
          return filtered;
        };

        return LessThanEqualFilter;

      })(_ModelFilter);
      return LessThanEqualFilter;
    }
  ]);

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  angular.module('OC').factory('_LessThanFilter', [
    '_ModelFilter', function(_ModelFilter) {
      var LessThanFilter;
      LessThanFilter = (function(_super) {

        __extends(LessThanFilter, _super);

        function LessThanFilter(_field, _value) {
          var name;
          this._field = _field;
          this._value = _value;
          name = 'lessthan';
          LessThanFilter.__super__.constructor.call(this, name, [this._field, this._value]);
        }

        LessThanFilter.prototype.exec = function(data) {
          var entry, filtered, _i, _len;
          filtered = [];
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            entry = data[_i];
            if (entry[this._field] < this._value) {
              filtered.push(entry);
            }
          }
          return filtered;
        };

        return LessThanFilter;

      })(_ModelFilter);
      return LessThanFilter;
    }
  ]);

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {

  angular.module('OC').factory('Loading', function() {
    var Loading;
    Loading = (function() {

      function Loading() {
        this._count = 0;
      }

      Loading.prototype.increase = function() {
        return this._count += 1;
      };

      Loading.prototype.decrease = function() {
        return this._count -= 1;
      };

      Loading.prototype.getCount = function() {
        return this._count;
      };

      Loading.prototype.isLoading = function() {
        return this._count > 0;
      };

      return Loading;

    })();
    return new Loading();
  });

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  angular.module('OC').factory('_MaximumFilter', [
    '_ModelFilter', function(_ModelFilter) {
      var MaximumFilter;
      MaximumFilter = (function(_super) {

        __extends(MaximumFilter, _super);

        function MaximumFilter(_field) {
          var name;
          this._field = _field;
          name = 'maximum';
          MaximumFilter.__super__.constructor.call(this, name, [this._field]);
        }

        MaximumFilter.prototype.exec = function(data) {
          var entry, maximum, _i, _len;
          maximum = void 0;
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            entry = data[_i];
            if (angular.isUndefined(maximum) || entry[this._field] > maximum[this._field]) {
              maximum = entry;
            }
          }
          return maximum;
        };

        return MaximumFilter;

      })(_ModelFilter);
      return MaximumFilter;
    }
  ]);

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  angular.module('OC').factory('_MinimumFilter', [
    '_ModelFilter', function(_ModelFilter) {
      var MinimumFilter;
      MinimumFilter = (function(_super) {

        __extends(MinimumFilter, _super);

        function MinimumFilter(_field) {
          var name;
          this._field = _field;
          name = 'minimum';
          MinimumFilter.__super__.constructor.call(this, name, [this._field]);
        }

        MinimumFilter.prototype.exec = function(data) {
          var entry, minimum, _i, _len;
          minimum = void 0;
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            entry = data[_i];
            if (angular.isUndefined(minimum) || entry[this._field] < minimum[this._field]) {
              minimum = entry;
            }
          }
          return minimum;
        };

        return MinimumFilter;

      })(_ModelFilter);
      return MinimumFilter;
    }
  ]);

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {

  angular.module('OC').factory('_Model', function() {
    var Model;
    Model = (function() {

      function Model() {
        this._data = [];
        this._dataMap = {};
        this._filterCache = {};
      }

      Model.prototype.handle = function(data) {
        /*
        			Redirects to add method
        */
        return this.add(data);
      };

      Model.prototype.add = function(data) {
        /*
        			Adds a new entry or updates an entry if the id exists already
        */
        this._invalidateCache();
        if (angular.isDefined(this._dataMap[data.id])) {
          return this.update(data);
        } else {
          this._data.push(data);
          return this._dataMap[data.id] = data;
        }
      };

      Model.prototype.update = function(data) {
        /*
        			Update an entry by searching for its id
        */

        var entry, key, value, _results;
        this._invalidateCache();
        entry = this.getById(data.id);
        _results = [];
        for (key in data) {
          value = data[key];
          if (key === 'id') {
            continue;
          } else {
            _results.push(entry[key] = value);
          }
        }
        return _results;
      };

      Model.prototype.getById = function(id) {
        /*
        			Return an entry by its id
        */
        return this._dataMap[id];
      };

      Model.prototype.getAll = function() {
        /*
        			Returns all stored entries
        */
        return this._data;
      };

      Model.prototype.removeById = function(id) {
        /*
        			Remove an entry by id
        */

        var counter, entry, _i, _len, _ref, _results;
        _ref = this._data;
        _results = [];
        for (counter = _i = 0, _len = _ref.length; _i < _len; counter = ++_i) {
          entry = _ref[counter];
          if (entry.id === id) {
            this._data.splice(counter, 1);
            delete this._dataMap[id];
            this._invalidateCache();
            break;
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      };

      Model.prototype.clear = function() {
        /*
        			Removes all cached elements
        */
        this._data.length = 0;
        this._dataMap = {};
        return this._invalidateCache();
      };

      Model.prototype._invalidateCache = function() {
        return this._filterCache = {};
      };

      Model.prototype.get = function(filter) {
        /*
        			Calls, caches and returns filter results
        */

        var hash;
        hash = filter.hashCode();
        if (!angular.isDefined(this._filterCache[hash])) {
          this._filterCache[hash] = filter.exec(this._data);
        }
        return this._filterCache[hash];
      };

      Model.prototype.size = function() {
        /*
        			Return the number of all stored entries
        */
        return this._data.length;
      };

      return Model;

    })();
    return Model;
  });

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {

  angular.module('OC').factory('_ModelFilter', [
    '_NotImplementedError', function(_NotImplementedError) {
      var ModelFilter;
      ModelFilter = (function() {

        function ModelFilter(_name, _args) {
          this._name = _name;
          this._args = _args != null ? _args : [];
        }

        ModelFilter.prototype.exec = function() {
          throw new _NotImplementedError('Not implemented');
        };

        ModelFilter.prototype.hashCode = function(filter) {
          var arg, hash, _i, _len, _ref;
          hash = this._name;
          _ref = this._args;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            arg = _ref[_i];
            if (angular.isString(arg)) {
              arg = arg.replace(/_/gi, '__');
            }
            hash += '_' + arg;
          }
          return hash;
        };

        return ModelFilter;

      })();
      return ModelFilter;
    }
  ]);

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {

  angular.module('OC').factory('Notification', function() {
    return OC.Notification;
  });

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {

  angular.module('OC').factory('_NotImplementedError', function() {
    var NotImplementedError;
    NotImplementedError = (function() {

      function NotImplementedError(_msg) {
        this._msg = _msg;
      }

      NotImplementedError.prototype.getMessage = function() {
        return this._msg;
      };

      return NotImplementedError;

    })();
    return NotImplementedError;
  });

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {

  angular.module('OC').factory('_Publisher', function() {
    var Publisher;
    Publisher = (function() {

      function Publisher() {
        this._subscriptions = {};
      }

      Publisher.prototype.subscribeModelTo = function(model, name) {
        var _base;
        (_base = this._subscriptions)[name] || (_base[name] = []);
        return this._subscriptions[name].push(model);
      };

      Publisher.prototype.publishDataTo = function(data, name) {
        var subscriber, _i, _len, _ref, _results;
        _ref = this._subscriptions[name] || [];
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          subscriber = _ref[_i];
          _results.push(subscriber.handle(data));
        }
        return _results;
      };

      return Publisher;

    })();
    return Publisher;
  });

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {

  angular.module('OC').factory('_Request', function() {
    var Request;
    Request = (function() {

      function Request(_$http, _publisher, _router) {
        var _this = this;
        this._$http = _$http;
        this._publisher = _publisher;
        this._router = _router;
        this._initialized = false;
        this._shelvedRequests = [];
        this._router.registerLoadedCallback(function() {
          _this._initialized = true;
          _this._executeShelvedRequests();
          return _this._shelvedRequests = [];
        });
      }

      Request.prototype.request = function(route, routeParams, data, onSuccess, onFailure, config) {
        var defaultConfig, url,
          _this = this;
        if (routeParams == null) {
          routeParams = {};
        }
        if (data == null) {
          data = {};
        }
        if (onSuccess == null) {
          onSuccess = null;
        }
        if (onFailure == null) {
          onFailure = null;
        }
        if (config == null) {
          config = {};
        }
        /*
        			Wrapper to do a normal request to the server. This needs to
        			be done to hook the publisher into the requests and to handle
        			requests, that come in before routes have been loaded
        */

        if (!this._initialized) {
          this._shelveRequest(route, routeParams, data, onSuccess, onFailure, config);
          return;
        }
        url = this._router.generate(route, routeParams);
        defaultConfig = {
          url: url,
          data: data
        };
        angular.extend(defaultConfig, config);
        return this._$http(defaultConfig).success(function(data, status, headers, config) {
          var name, value, _ref, _results;
          if (onSuccess !== null) {
            onSuccess(data, status, headers, config);
          }
          _ref = data.data;
          _results = [];
          for (name in _ref) {
            value = _ref[name];
            _results.push(_this._publisher.publishDataTo(name, value));
          }
          return _results;
        }).error(function(data, status, headers, config) {
          if (onFailure !== null) {
            return onFailure(data, status, headers, config);
          }
        });
      };

      Request.prototype.post = function(route, routeParams, data, onSuccess, onFailure, config) {
        if (routeParams == null) {
          routeParams = {};
        }
        if (data == null) {
          data = {};
        }
        if (onSuccess == null) {
          onSuccess = null;
        }
        if (onFailure == null) {
          onFailure = null;
        }
        if (config == null) {
          config = {};
        }
        /*
        			Request shortcut which sets the method to POST
        */

        config.method = 'POST';
        return this.request(route, routeParams, data, onSuccess, onFailure, config);
      };

      Request.prototype.get = function(route, routeParams, data, onSuccess, onFailure, config) {
        if (routeParams == null) {
          routeParams = {};
        }
        if (data == null) {
          data = {};
        }
        if (onSuccess == null) {
          onSuccess = null;
        }
        if (onFailure == null) {
          onFailure = null;
        }
        if (config == null) {
          config = {};
        }
        /*
        			Request shortcut which sets the method to GET
        */

        config.method = 'GET';
        return this.request(route, routeParams, data, onSuccess, onFailure, config);
      };

      Request.prototype._shelveRequest = function(route, routeParams, data, onSuccess, onFailure, config) {
        /*
        			Saves requests for later if the routes have not been loaded
        */

        var request;
        request = {
          route: route,
          routeParams: routeParams,
          data: data,
          onSuccess: onSuccess,
          onFailure: onFailure,
          config: config
        };
        return this._shelvedRequests.push(request);
      };

      Request.prototype._executeShelvedRequests = function() {
        /*
        			Run all saved requests that were done before routes were fully
        			loaded
        */

        var r, _i, _len, _ref, _results;
        _ref = this._shelvedRequests;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          r = _ref[_i];
          _results.push(this.request(r.route, r.routeParams, r.data, r.onSuccess, r.onFailure, r.config));
        }
        return _results;
      };

      return Request;

    })();
    return Request;
  });

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {

  angular.module('OC').factory('Router', function() {
    return OC.Router;
  });

}).call(this);

// Generated by CoffeeScript 1.4.0

/*

ownCloud - App Framework

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt nukeawhale@gmail.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  angular.module('OC').factory('_UnequalFilter', [
    '_ModelFilter', function(_ModelFilter) {
      var UnequalFilter;
      UnequalFilter = (function(_super) {

        __extends(UnequalFilter, _super);

        function UnequalFilter(field, value) {
          var name;
          this.field = field;
          this.value = value;
          name = 'unequal';
          UnequalFilter.__super__.constructor.call(this, name, [this.field, this.value]);
        }

        UnequalFilter.prototype.exec = function(data) {
          var entry, unequal, _i, _len;
          unequal = [];
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            entry = data[_i];
            if (entry[this.field] !== this.value) {
              unequal.push(entry);
            }
          }
          return unequal;
        };

        return UnequalFilter;

      })(_ModelFilter);
      return UnequalFilter;
    }
  ]);

}).call(this);
